팀소개
자기 소개(각자 자기 소개 프로젝트에서 stiring을 맡은 string입니다)
클라 우성준
클라 박찬휘
서버 함범호



저희 팀은 1대1 3d 복싱 게임을 만들기로 하였습니다.


주된 기술적 요소와 중점 연구분야입니다.
먼저 타격감입니다. 복싱게임 격투게임이기 때문에 타격감에 대해서 구체적으로 연구하고 필요한 기술을 개발 하는 중입니다.
청각적 효과 보다 시각적 효과가 더 중요하다고 생각을 해서 청각적 효과에 대해서는 차후에 사운드를 다양하게 적용할 예정입니다.
//나중에는 FMOD 도플러 효과를 사용해서 관중의 환호성 등에 적용할 예정입니다.

시각적인 요소중 애니메이션, 이펙트를 중점적으로 개발 했습니다.
애니메이션은 스키닝 애니메이션과 김영식교수님께서 말씀해주신 랙돌 애니메이션이 있습니다.
충돌처리는 격투게임을 할 때 부위별 타격을 하여 정교한 충돌처리를 만들고 있습니다.
//그 이유는 다른 게임들 보다 집중되어야 하는 부분이 정해져있고 한 부분에 만 집중을 해야되서 좀 지루하다 그래서 때리는 부위 마다
//재미를 느껴야댐 야랄럼아


역할분담입니다.
우성준은 클라이언트에서 전체적인 게임 프레임워크와 이펙트를 주로 담당했습니다.
박찬휘는 클라이언트에서 애니메이션과 충돌처리를 담당했습니다.
함범호는 서버에서 멀티스레드, 네트워크 통신과 충돌처리를 담당했습니다.
(태클걸 확률이 있다. 클라와 서버의 충돌처리가 뭐가 다른 것인가.)
// 클라에서 충돌처리는 맵 밖으로 나가지 못하게 하거나, 충돌했을때의 신호, 이펙트 등을 이야기하고
// 서버에서는 각 부위마다 충돌처리가 되어 어떤 애니메이션을 취해야하는가, 또는 얼만큼의 데미지가 들어가야하는가를 처리합니다.


일정입니다.
저희는 현재 전체 진척도에서 중간평가 까지 60퍼센트를 계획했습니다. 그러나 일정에 차질이 생겨
45퍼센트 정도 개발을 진행중에 있습니다. 현재 보는 일정은 이전에 마치지 못했던 것들을 뒤로 빼는 것으로 정했습니다.

(태클 또 들어올 확률 높음)
// 랙돌 애니메이션에 대한 연구, 또 랙돌과 맞지 않는 애니메이션 컨트롤러가 문제 였습니다.
// 그 문제를 해결하다가 결국에는 해결하지 못하고 너무 시간이 낭비되었다.
// 


개발내용
현재 애니메이션은 서버 충돌처리와 클라이언트간에 싱크를 맞추기 위해 몇가지의 모션만 있습니다.
이 이후에는 더 많은 애니메이션을 넣어서 부위별 타격 또는 피격했을 시 모션을 다양화 할 예정입니다.
애니메이션 제어는 현재 우리 애니메이션 컨트롤러가 항상 애니메이션을 동작하게 만들고 있습니다.
이는 나중에 랙돌 애니메이션을 진행하면서 애니메이션을 해야하는 상태와 랙돌 애니메이션을 하는 상태로
구분할 생각입니다.

// 기획에서는 랙돌까지 개발하는 것이 목표였지만 진행중 랙돌을 구현하는데 문제가 생겨서
// 이것을 계속 붙잡고 있는것보다 중간발표에 보여드릴 것을 먼저 개발하는게
// 개발 진행속도에 차질이 없을것 같았다. 

내부충돌처리 - 충돌처리는 맵 밖으로 나가지 못하게 하거나, 충돌했을때의 신호, 이펙트 등을 이야기하고

조명연출은 라이트를 사용하고 퍼포먼스용으로 만들 예정입니다. 그전에 조명의 종류를 만들어 상황에 맞는 조명을 사용할 예정입니다. 
또한 맵 바닥에 대한 노말을 만들어 more real 한 조명을 만들계획입니다.


타격이펙트는 현재 파티클만 구현이 된 상태입니다. 파티클이 뻗어나가는 모양은 차후에 다시 만들 생각입니다.
나중에는 조명과 파티클을 섞어서 더 화려한 이펙트를 만들 예정입니다.
(그림자 쉐이더 되있으나 캐릭터에 대한 노말은 있고 맵에 대한 노말이 존재하지 않아 눈에 보이지 않습니다.)

서버 개발 내용 
스레드 번호를 임의 지정하여 이를 통해서 클라이언트는 플레이어의 좌표와 플레이어의 상태 등 을 서버에 보내고 이를 스레드번호를 기준으로 처리를 한다
// 맞은 플레이어와 때리는 플레이어 구분이다.

충돌처리의 경우
복싱 게임의 특성상 각 손과 머리 몸통 등 다양한 부위의 충돌이 있기떄문에
각 부위마다 OBB를 사용을 해서 충돌처리를 구현 하였습니다.
//OBB에서 AABB로 바꿀 의향이 있다고 뉘양스만 ㄱㄱ

충돌처리를 각 클라이언트에서 충돌됨이 동시에 보여지는 것을 목표로 하여 클라이언트가 랜더링할떄마다 recv를 하도록 하였습니다.

같은 네트워크 상에서 서버를 작동하고 각 다른 컴퓨터에서 접속을 하는 것은 확인하였습니다.
하지만 클라이언트의 프레임이 현저히 저하되고있습니다.


문제점 및 보완책
클라이언트에서 가장 큰 문제점은 랙돌 애니메이션을 준비하려고 애니메이션을 계속 붙잡고 있었습니다. 그러나 랙돌에 대한 이론지식은 있지만
이것을 구현하려면 많은 구조의 변화가 필요하다는 것을 느끼고 시간이 많이 드는 것을 계속 붙잡고 잇어 진척이 느린 것 보다 
할 수 있는 것 바로 만들어 진척도를 높이는 방향을 목표했습니다 그래서 게임완성도 부터 높인 후에 기술적 요소를 개발 하기로 했습니다.


//일단 랙돌 애니메이션을 구현하기 위해서 각 부위별 애니메이션 컨트롤러에 집어넣어 실행을 해보려 하였으나, 접근이 잘못되어서 실패했다.
(각 본에 대해 메쉬가 따로 존재 해야하고, 그리고 본에 대해서 중력을 넣어 처리를 해주어야한다. 메쉬가 땅에 닿았을 때의 물리적 요소를 추가해야한다. 또한 각 매쉬끼리 충돌을 처리해야한다.) 
근데 이걸 못하니까 문제지 


애니메이션을 진행하는 중에 애니메이션 처음과 끝부분이 조금씩 유실되는 현상이 있다.
이는 현재 키프레임타임 즉 float형 자료형으로 애니메이션을 동작시키고 있었다.
이를 키프레임타임을 애니메이션 프레임만큼 나누어 애니메이션을 진행하면 될 것 같다.

서버 문제점 보완책 -
네트워크 연결을 통한 클라이언트 실행시 클라이언트의 급격한 프레임 드랍이 현재
발생하고있습니다
이는 각 클라이언트의 모습을 상대 클라이언트에 최대한 딜레이없이 넘겨주기위해서
랜더링할떄마다 recv를 받으떄까지 대기하는 것이 문제점이라 파악하였고
이를 해결하기위해서 랜더링할때마다 recv를 대기하는것이 아니라
서버로부터 recv값이 존재할떄만 recv를 실행하는 하도록 변경하면서 이에따라 각클라이언트 간 싱크 또한 
어긋나지 않도록 수정할 것입니다.

스레드간 동기화 문제는
게임을 실행시 종종 한쪽 스레드가 가지고 있는값이 다른스레드에 의해서 플레이어의 주먹 좌표가 변경되어
충돌처리가 올바르게 되지 않는 경우가 있습니다.
공유하는 자원을 최대한 분리하고, 현재 설정된 임계영역 사용빈도를 줄이는 것을 목표로 개발 할 예정이다.





중간발표를 통과 한다면 바로 클라이언트에서는 랙돌 애니메이션 작업을 하기 위해 애니메이션 컨트롤러부터 수정할 계획입니다.


데모 할때 3가지 버전이 있어야댐

에코 서버
솔로 클라이언트
네트워크 통신 서버
PVP와 PVE 모드 두가지를 만들 것이다.
그중에 PVP는 준비가 덜 되어 PVE로 보여드리겠다.

/*****************************************************************************************************************************************/































